# (c) 2021 Copyright, Real-Time Innovations, Inc. (RTI)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# generated from connext_node_helpers/connext_node_helpers-extras.cmake.in

################################################################################
# Load RTI Connext DDS using ROS 2 package `rti_connext_dds_cmake_module`
################################################################################
# rclcpp's dependency chain will already include `rti_connext_dds_cmake_module`
# if environment variable RMW_IMPLEMENTATION is set to `rmw_connextdds` when the
# project is configured with cmake. Since that might not always be the case,
# we load the package manually to make sure that we use the same RTI Connext DDS
# installation and the exact same architecture as `rmw_connextdds`.
# This is required for things to work properly.
################################################################################
find_package(rti_connext_dds_cmake_module REQUIRED)
list(INSERT CMAKE_MODULE_PATH 0 "${CONNEXTDDS_DIR}/resource/cmake")
message(STATUS "loading RTI Connext DDS with `rti_connext_cmake_module`")
find_package(RTIConnextDDS REQUIRED)
if(NOT RTIConnextDDS_FOUND)
  message(FATAL_ERROR "RTI Connext DDS (${CONNEXTDDS_ARCH}) not found in "
    "'${CONNEXTDDS_DIR}'")
elseif("${RTICONNEXTDDS_VERSION}" VERSION_LESS_EQUAL "6.0.0")
  message(FATAL_ERROR "RTI Connext DDS 6.x required. "
    "Found: ${RTICONNEXTDDS_VERSION}")
  set(RTIConnextDDS_FOUND false)
endif()

get_filename_component(@PROJECT_NAME@_SHARE_DIR "${@PROJECT_NAME@_DIR}" DIRECTORY)
set(@PROJECT_NAME@_NODE_TEMPLATE "${@PROJECT_NAME@_SHARE_DIR}/cmake/node_main.cpp.in")

include("${@PROJECT_NAME@_DIR}/connext_node.cmake")
